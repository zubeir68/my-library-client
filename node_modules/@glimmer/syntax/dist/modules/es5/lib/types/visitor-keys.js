// ensure stays in sync with typing
// ParentNode and ChildKey types are derived from VisitorKeysMap
var visitorKeys = {
    Program: ['body'],
    MustacheStatement: ['path', 'params', 'hash'],
    BlockStatement: ['path', 'params', 'hash', 'program', 'inverse'],
    ElementModifierStatement: ['path', 'params', 'hash'],
    PartialStatement: ['name', 'params', 'hash'],
    CommentStatement: [],
    MustacheCommentStatement: [],
    ElementNode: ['attributes', 'modifiers', 'children', 'comments'],
    AttrNode: ['value'],
    TextNode: [],
    ConcatStatement: ['parts'],
    SubExpression: ['path', 'params', 'hash'],
    PathExpression: [],
    StringLiteral: [],
    BooleanLiteral: [],
    NumberLiteral: [],
    NullLiteral: [],
    UndefinedLiteral: [],
    Hash: ['pairs'],
    HashPair: ['value']
};
export default visitorKeys;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlzaXRvci1rZXlzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvQGdsaW1tZXIvc3ludGF4L2xpYi90eXBlcy92aXNpdG9yLWtleXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsQUFBbUM7QUFDbkMsQUFBZ0U7QUFDaEUsSUFBTSxBQUFXO2FBQ04sQ0FBQyxBQUFNLEFBQUMsQUFDakIsQUFBaUI7dUJBQUUsQ0FBQyxBQUFNLFFBQUUsQUFBUSxVQUFFLEFBQU0sQUFBQyxBQUM3QyxBQUFjO29CQUFFLENBQUMsQUFBTSxRQUFFLEFBQVEsVUFBRSxBQUFNLFFBQUUsQUFBUyxXQUFFLEFBQVMsQUFBQyxBQUNoRSxBQUF3Qjs4QkFBRSxDQUFDLEFBQU0sUUFBRSxBQUFRLFVBQUUsQUFBTSxBQUFDLEFBQ3BELEFBQWdCO3NCQUFFLENBQUMsQUFBTSxRQUFFLEFBQVEsVUFBRSxBQUFNLEFBQUMsQUFDNUMsQUFBZ0I7c0JBQUUsQUFBRSxBQUNwQixBQUF3Qjs4QkFBRSxBQUFFLEFBQzVCLEFBQVc7aUJBQUUsQ0FBQyxBQUFZLGNBQUUsQUFBVyxhQUFFLEFBQVUsWUFBRSxBQUFVLEFBQUMsQUFDaEUsQUFBUTtjQUFFLENBQUMsQUFBTyxBQUFDLEFBQ25CLEFBQVE7Y0FBRSxBQUFFLEFBRVosQUFBZTtxQkFBRSxDQUFDLEFBQU8sQUFBQyxBQUMxQixBQUFhO21CQUFFLENBQUMsQUFBTSxRQUFFLEFBQVEsVUFBRSxBQUFNLEFBQUMsQUFDekMsQUFBYztvQkFBRSxBQUFFLEFBRWxCLEFBQWE7bUJBQUUsQUFBRSxBQUNqQixBQUFjO29CQUFFLEFBQUUsQUFDbEIsQUFBYTttQkFBRSxBQUFFLEFBQ2pCLEFBQVc7aUJBQUUsQUFBRSxBQUNmLEFBQWdCO3NCQUFFLEFBQUUsQUFFcEIsQUFBSTtVQUFFLENBQUMsQUFBTyxBQUFDLEFBQ2YsQUFBUTtjQUFFLENBdkJ3QixBQXVCdkIsQUFBTyxBQUFDLEFBQ3BCLEFBQUM7QUF2QkEsQUFBTztBQXlCVCxlQUFlLEFBQVcsQUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpc2l0b3JLZXlzTWFwIH0gZnJvbSAnLi9ub2Rlcyc7XG5cbi8vIGVuc3VyZSBzdGF5cyBpbiBzeW5jIHdpdGggdHlwaW5nXG4vLyBQYXJlbnROb2RlIGFuZCBDaGlsZEtleSB0eXBlcyBhcmUgZGVyaXZlZCBmcm9tIFZpc2l0b3JLZXlzTWFwXG5jb25zdCB2aXNpdG9yS2V5czogVmlzaXRvcktleXNNYXAgPSB7XG4gIFByb2dyYW06IFsnYm9keSddLFxuICBNdXN0YWNoZVN0YXRlbWVudDogWydwYXRoJywgJ3BhcmFtcycsICdoYXNoJ10sXG4gIEJsb2NrU3RhdGVtZW50OiBbJ3BhdGgnLCAncGFyYW1zJywgJ2hhc2gnLCAncHJvZ3JhbScsICdpbnZlcnNlJ10sXG4gIEVsZW1lbnRNb2RpZmllclN0YXRlbWVudDogWydwYXRoJywgJ3BhcmFtcycsICdoYXNoJ10sXG4gIFBhcnRpYWxTdGF0ZW1lbnQ6IFsnbmFtZScsICdwYXJhbXMnLCAnaGFzaCddLFxuICBDb21tZW50U3RhdGVtZW50OiBbXSxcbiAgTXVzdGFjaGVDb21tZW50U3RhdGVtZW50OiBbXSxcbiAgRWxlbWVudE5vZGU6IFsnYXR0cmlidXRlcycsICdtb2RpZmllcnMnLCAnY2hpbGRyZW4nLCAnY29tbWVudHMnXSxcbiAgQXR0ck5vZGU6IFsndmFsdWUnXSxcbiAgVGV4dE5vZGU6IFtdLFxuXG4gIENvbmNhdFN0YXRlbWVudDogWydwYXJ0cyddLFxuICBTdWJFeHByZXNzaW9uOiBbJ3BhdGgnLCAncGFyYW1zJywgJ2hhc2gnXSxcbiAgUGF0aEV4cHJlc3Npb246IFtdLFxuXG4gIFN0cmluZ0xpdGVyYWw6IFtdLFxuICBCb29sZWFuTGl0ZXJhbDogW10sXG4gIE51bWJlckxpdGVyYWw6IFtdLFxuICBOdWxsTGl0ZXJhbDogW10sXG4gIFVuZGVmaW5lZExpdGVyYWw6IFtdLFxuXG4gIEhhc2g6IFsncGFpcnMnXSxcbiAgSGFzaFBhaXI6IFsndmFsdWUnXSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHZpc2l0b3JLZXlzO1xuIl19