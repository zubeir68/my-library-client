// ensure stays in sync with typing
// ParentNode and ChildKey types are derived from VisitorKeysMap
const visitorKeys = {
    Program: ['body'],
    MustacheStatement: ['path', 'params', 'hash'],
    BlockStatement: ['path', 'params', 'hash', 'program', 'inverse'],
    ElementModifierStatement: ['path', 'params', 'hash'],
    PartialStatement: ['name', 'params', 'hash'],
    CommentStatement: [],
    MustacheCommentStatement: [],
    ElementNode: ['attributes', 'modifiers', 'children', 'comments'],
    AttrNode: ['value'],
    TextNode: [],
    ConcatStatement: ['parts'],
    SubExpression: ['path', 'params', 'hash'],
    PathExpression: [],
    StringLiteral: [],
    BooleanLiteral: [],
    NumberLiteral: [],
    NullLiteral: [],
    UndefinedLiteral: [],
    Hash: ['pairs'],
    HashPair: ['value']
};
export default visitorKeys;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlzaXRvci1rZXlzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvQGdsaW1tZXIvc3ludGF4L2xpYi90eXBlcy92aXNpdG9yLWtleXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsQUFBbUM7QUFDbkMsQUFBZ0U7QUFDaEUsTUFBTSxBQUFXO0FBQ2YsQUFBTyxhQUFFLENBQUMsQUFBTSxBQUFDO0FBQ2pCLEFBQWlCLHVCQUFFLENBQUMsQUFBTSxRQUFFLEFBQVEsVUFBRSxBQUFNLEFBQUM7QUFDN0MsQUFBYyxvQkFBRSxDQUFDLEFBQU0sUUFBRSxBQUFRLFVBQUUsQUFBTSxRQUFFLEFBQVMsV0FBRSxBQUFTLEFBQUM7QUFDaEUsQUFBd0IsOEJBQUUsQ0FBQyxBQUFNLFFBQUUsQUFBUSxVQUFFLEFBQU0sQUFBQztBQUNwRCxBQUFnQixzQkFBRSxDQUFDLEFBQU0sUUFBRSxBQUFRLFVBQUUsQUFBTSxBQUFDO0FBQzVDLEFBQWdCLHNCQUFFLEFBQUU7QUFDcEIsQUFBd0IsOEJBQUUsQUFBRTtBQUM1QixBQUFXLGlCQUFFLENBQUMsQUFBWSxjQUFFLEFBQVcsYUFBRSxBQUFVLFlBQUUsQUFBVSxBQUFDO0FBQ2hFLEFBQVEsY0FBRSxDQUFDLEFBQU8sQUFBQztBQUNuQixBQUFRLGNBQUUsQUFBRTtBQUVaLEFBQWUscUJBQUUsQ0FBQyxBQUFPLEFBQUM7QUFDMUIsQUFBYSxtQkFBRSxDQUFDLEFBQU0sUUFBRSxBQUFRLFVBQUUsQUFBTSxBQUFDO0FBQ3pDLEFBQWMsb0JBQUUsQUFBRTtBQUVsQixBQUFhLG1CQUFFLEFBQUU7QUFDakIsQUFBYyxvQkFBRSxBQUFFO0FBQ2xCLEFBQWEsbUJBQUUsQUFBRTtBQUNqQixBQUFXLGlCQUFFLEFBQUU7QUFDZixBQUFnQixzQkFBRSxBQUFFO0FBRXBCLEFBQUksVUFBRSxDQUFDLEFBQU8sQUFBQztBQUNmLEFBQVEsY0FBRSxDQUFDLEFBQU8sQUFBQyxBQUNwQixBQUFDO0FBeEJrQztBQTBCcEMsZUFBZSxBQUFXLEFBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaXNpdG9yS2V5c01hcCB9IGZyb20gJy4vbm9kZXMnO1xuXG4vLyBlbnN1cmUgc3RheXMgaW4gc3luYyB3aXRoIHR5cGluZ1xuLy8gUGFyZW50Tm9kZSBhbmQgQ2hpbGRLZXkgdHlwZXMgYXJlIGRlcml2ZWQgZnJvbSBWaXNpdG9yS2V5c01hcFxuY29uc3QgdmlzaXRvcktleXM6IFZpc2l0b3JLZXlzTWFwID0ge1xuICBQcm9ncmFtOiBbJ2JvZHknXSxcbiAgTXVzdGFjaGVTdGF0ZW1lbnQ6IFsncGF0aCcsICdwYXJhbXMnLCAnaGFzaCddLFxuICBCbG9ja1N0YXRlbWVudDogWydwYXRoJywgJ3BhcmFtcycsICdoYXNoJywgJ3Byb2dyYW0nLCAnaW52ZXJzZSddLFxuICBFbGVtZW50TW9kaWZpZXJTdGF0ZW1lbnQ6IFsncGF0aCcsICdwYXJhbXMnLCAnaGFzaCddLFxuICBQYXJ0aWFsU3RhdGVtZW50OiBbJ25hbWUnLCAncGFyYW1zJywgJ2hhc2gnXSxcbiAgQ29tbWVudFN0YXRlbWVudDogW10sXG4gIE11c3RhY2hlQ29tbWVudFN0YXRlbWVudDogW10sXG4gIEVsZW1lbnROb2RlOiBbJ2F0dHJpYnV0ZXMnLCAnbW9kaWZpZXJzJywgJ2NoaWxkcmVuJywgJ2NvbW1lbnRzJ10sXG4gIEF0dHJOb2RlOiBbJ3ZhbHVlJ10sXG4gIFRleHROb2RlOiBbXSxcblxuICBDb25jYXRTdGF0ZW1lbnQ6IFsncGFydHMnXSxcbiAgU3ViRXhwcmVzc2lvbjogWydwYXRoJywgJ3BhcmFtcycsICdoYXNoJ10sXG4gIFBhdGhFeHByZXNzaW9uOiBbXSxcblxuICBTdHJpbmdMaXRlcmFsOiBbXSxcbiAgQm9vbGVhbkxpdGVyYWw6IFtdLFxuICBOdW1iZXJMaXRlcmFsOiBbXSxcbiAgTnVsbExpdGVyYWw6IFtdLFxuICBVbmRlZmluZWRMaXRlcmFsOiBbXSxcblxuICBIYXNoOiBbJ3BhaXJzJ10sXG4gIEhhc2hQYWlyOiBbJ3ZhbHVlJ10sXG59O1xuXG5leHBvcnQgZGVmYXVsdCB2aXNpdG9yS2V5cztcbiJdfQ==